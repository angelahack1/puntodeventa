{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///home/angel/Developments/puntodeventa/src/components/ProductCard.tsx"],"sourcesContent":["import { Product } from '@/data/products';\r\nimport Image from 'next/image';\r\n\r\n\r\ninterface ProductCardProps {\r\n  product: Product;\r\n}\r\n\r\nexport default function ProductCard({ product }: ProductCardProps) {\r\n  return (\r\n    <div className=\"border rounded-lg overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300\">\r\n      <div className=\"relative w-full h-48\">\r\n        <Image \r\n          src={product.image_url} \r\n          alt={product.name} \r\n          fill\r\n          style={{ objectFit: 'cover' }}\r\n        />\r\n      </div>\r\n      <div className=\"p-4\">\r\n        <h3 className=\"text-lg font-semibold mb-1\">{product.name}</h3>\r\n        <p className=\"text-gray-600 text-sm mb-2\">{product.description}</p>\r\n        <p className=\"text-lg font-bold text-blue-600\">${product.price.toFixed(2)} {product.divisa}</p>\r\n        <p className=\"text-lg font-bold text-yellow-600\">{product.estado}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n} \r\n"],"names":[],"mappings":";;;;AACA;;;AAOe,SAAS,YAAY,EAAE,OAAO,EAAoB;IAC/D,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,6HAAA,CAAA,UAAK;oBACJ,KAAK,QAAQ,SAAS;oBACtB,KAAK,QAAQ,IAAI;oBACjB,IAAI;oBACJ,OAAO;wBAAE,WAAW;oBAAQ;;;;;;;;;;;0BAGhC,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAA8B,QAAQ,IAAI;;;;;;kCACxD,8OAAC;wBAAE,WAAU;kCAA8B,QAAQ,WAAW;;;;;;kCAC9D,8OAAC;wBAAE,WAAU;;4BAAkC;4BAAE,QAAQ,KAAK,CAAC,OAAO,CAAC;4BAAG;4BAAE,QAAQ,MAAM;;;;;;;kCAC1F,8OAAC;wBAAE,WAAU;kCAAqC,QAAQ,MAAM;;;;;;;;;;;;;;;;;;AAIxE","debugId":null}},
    {"offset": {"line": 113, "column": 0}, "map": {"version":3,"sources":["file:///home/angel/Developments/puntodeventa/src/data/products.ts"],"sourcesContent":["export interface Product {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  price: number;\r\n  divisa: string;\r\n  image_url: string;\r\n  estado: string;\r\n}\r\n\r\nexport const products: Product[] = [];\r\n\r\n"],"names":[],"mappings":";;;AAUO,MAAM,WAAsB,EAAE","debugId":null}},
    {"offset": {"line": 131, "column": 0}, "map": {"version":3,"sources":["file:///home/angel/Developments/puntodeventa/src/db/db_access.ts"],"sourcesContent":["import { MongoClient } from 'mongodb';\r\nimport { Product, products } from '@/data/products';\r\n\r\nasync function getProductsFromDB(): Promise<Product[]> {\r\n  const uri = process.env.MONGODB_URI;\r\n\r\n  if (!uri) throw new Error('MongoDB URI not found in environment variables');\r\n\r\n  const client = new MongoClient(uri);\r\n\r\n  try {\r\n    await client.connect();\r\n    const database = client.db('lepago-trading-core');\r\n    const collection = database.collection('Producto');\r\n\r\n    const pipeline = [\r\n      {\r\n        $lookup: {\r\n          from: 'CatalogoEstadosProducto',\r\n          let: { estado: '$estado' },\r\n          pipeline: [{ $match: { $expr: { $eq: [\"$_id\", \"$$estado\"] } } }],\r\n          as: 'estado_producto'\r\n        }\r\n      },\r\n      {\r\n        $lookup: {\r\n          from: 'CatalogoTiposDivisa',\r\n          let: { divisa: '$divisa' },\r\n          pipeline: [{ $match: { $expr: { $eq: [\"$_id\", \"$$divisa\"] } } }],\r\n          as: 'tipo_divisa'\r\n        }\r\n      },\r\n      {\r\n        $project: {\r\n          _id: 0,\r\n          id: '$_id',\r\n          qr: 1,\r\n          nombre: 1,\r\n          descripcion: 1,\r\n          sku: 1,\r\n          precio_inicial: 1,\r\n          image_url: 1,\r\n          estado: \"$estado_producto.nombre_estado\",\r\n          divisa: \"$tipo_divisa.nombre_tipo\"\r\n        }\r\n      }\r\n    ];\r\n\r\n    const aggregationResult = await collection.aggregate(pipeline).toArray();\r\n    \r\n    return aggregationResult.map(product => ({\r\n      id: product.id.toString(), \r\n      name: product.nombre,\r\n      description: product.descripcion,\r\n      price: product.precio_inicial,\r\n      divisa: product.divisa?.[0] || '', \r\n      image_url: product.image_url,\r\n      estado: product.estado?.[0] || 'N/A', \r\n    }));\r\n\r\n  } catch (error) {\r\n    console.error('Error fetching products from MongoDB:', error);\r\n    return []; \r\n  } finally {\r\n    await client.close();\r\n  }\r\n}\r\n\r\nexport const initializeProducts = async () => {\r\n  const dbProducts = await getProductsFromDB();\r\n  products.length = 0; \r\n  products.push(...dbProducts);\r\n};\r\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEA,eAAe;IACb,MAAM,MAAM,QAAQ,GAAG,CAAC,WAAW;IAEnC,IAAI,CAAC,KAAK,MAAM,IAAI,MAAM;IAE1B,MAAM,SAAS,IAAI,uGAAA,CAAA,cAAW,CAAC;IAE/B,IAAI;QACF,MAAM,OAAO,OAAO;QACpB,MAAM,WAAW,OAAO,EAAE,CAAC;QAC3B,MAAM,aAAa,SAAS,UAAU,CAAC;QAEvC,MAAM,WAAW;YACf;gBACE,SAAS;oBACP,MAAM;oBACN,KAAK;wBAAE,QAAQ;oBAAU;oBACzB,UAAU;wBAAC;4BAAE,QAAQ;gCAAE,OAAO;oCAAE,KAAK;wCAAC;wCAAQ;qCAAW;gCAAC;4BAAE;wBAAE;qBAAE;oBAChE,IAAI;gBACN;YACF;YACA;gBACE,SAAS;oBACP,MAAM;oBACN,KAAK;wBAAE,QAAQ;oBAAU;oBACzB,UAAU;wBAAC;4BAAE,QAAQ;gCAAE,OAAO;oCAAE,KAAK;wCAAC;wCAAQ;qCAAW;gCAAC;4BAAE;wBAAE;qBAAE;oBAChE,IAAI;gBACN;YACF;YACA;gBACE,UAAU;oBACR,KAAK;oBACL,IAAI;oBACJ,IAAI;oBACJ,QAAQ;oBACR,aAAa;oBACb,KAAK;oBACL,gBAAgB;oBAChB,WAAW;oBACX,QAAQ;oBACR,QAAQ;gBACV;YACF;SACD;QAED,MAAM,oBAAoB,MAAM,WAAW,SAAS,CAAC,UAAU,OAAO;QAEtE,OAAO,kBAAkB,GAAG,CAAC,CAAA,UAAW,CAAC;gBACvC,IAAI,QAAQ,EAAE,CAAC,QAAQ;gBACvB,MAAM,QAAQ,MAAM;gBACpB,aAAa,QAAQ,WAAW;gBAChC,OAAO,QAAQ,cAAc;gBAC7B,QAAQ,QAAQ,MAAM,EAAE,CAAC,EAAE,IAAI;gBAC/B,WAAW,QAAQ,SAAS;gBAC5B,QAAQ,QAAQ,MAAM,EAAE,CAAC,EAAE,IAAI;YACjC,CAAC;IAEH,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yCAAyC;QACvD,OAAO,EAAE;IACX,SAAU;QACR,MAAM,OAAO,KAAK;IACpB;AACF;AAEO,MAAM,qBAAqB;IAChC,MAAM,aAAa,MAAM;IACzB,uHAAA,CAAA,WAAQ,CAAC,MAAM,GAAG;IAClB,uHAAA,CAAA,WAAQ,CAAC,IAAI,IAAI;AACnB","debugId":null}},
    {"offset": {"line": 232, "column": 0}, "map": {"version":3,"sources":["file:///home/angel/Developments/puntodeventa/src/app/page.tsx"],"sourcesContent":["import ProductCard from \"@/components/ProductCard\";\nimport { products } from \"@/data/products\";\nimport { initializeProducts } from \"@/db/db_access\";\n\n\nexport default async function Home() {\n  await initializeProducts(); // Fetch products before rendering\n  return (\n    <main className=\"container mx-auto px-4 py-8\">\n      <h1 className=\"text-3xl font-bold text-center mb-8\">Nuestros Productos</h1>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n        {products.map((product) => (\n          <ProductCard key={product.id} product={product} />\n        ))}\n      </div>\n    </main>\n  );\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAGe,eAAe;IAC5B,MAAM,CAAA,GAAA,sHAAA,CAAA,qBAAkB,AAAD,KAAK,kCAAkC;IAC9D,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAG,WAAU;0BAAsC;;;;;;0BACpD,8OAAC;gBAAI,WAAU;0BACZ,uHAAA,CAAA,WAAQ,CAAC,GAAG,CAAC,CAAC,wBACb,8OAAC,iIAAA,CAAA,UAAW;wBAAkB,SAAS;uBAArB,QAAQ,EAAE;;;;;;;;;;;;;;;;AAKtC","debugId":null}}]
}